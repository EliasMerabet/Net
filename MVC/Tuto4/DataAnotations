View

@model Tuto.Models.Pelicula

@{
    ViewBag.Title = "PeliculaCreate";
}

<h2>Crear Pelicula</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pelicula</h4>
        <hr />
        @if (ViewBag.Completado != null)
        {
            <h5 style="color: red;">@ViewBag.Completado</h5>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duracion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duracion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duracion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Genero">
                    <option value="Amor">Amor</option>
                    <option value="Terror">Terror</option>
                    <option value="Accion">Accion</option>
                    <option value="Dibujos">Dibujos</option>
                </select>
                @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

Model

    public class Pelicula
    {
        [Required(ErrorMessage="Codigo de la Pelicula es Requerido")]
        public int Code { get; set; }
        public string Titulo { get; set; }

        [Range(90, 220, ErrorMessage ="La duracion introducida no es posible")]
        public int Duracion { get; set; }
        public string Genero { get; set; }

    }
    
Controller

        [HttpPost]
        public ActionResult PeliculaCreate(Pelicula p)
        {
            if (ModelState.IsValid) {
                Cartelera.Add(p);
                ViewBag.Completado = "Pelicula Creada con Exito";
            }
            return View();
        }
